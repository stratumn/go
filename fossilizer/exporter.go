// Copyright 2016-2018 Stratumn SAS. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fossilizer

import (
	"context"

	log "github.com/sirupsen/logrus"
)

// EventExporter can be used to export events generated by a fossilizer.
type EventExporter interface {
	// Push an event to the exporter.
	Push(context.Context, *Event) error
}

// RunExporter connects the given exporter to the given fossilizer.
// RunExporter should run inside a go routine and will return when the context
// is cancelled.
func RunExporter(ctx context.Context, f Adapter, e EventExporter) {
	eventChan := make(chan *Event)
	f.AddFossilizerEventChan(eventChan)

	for {
		select {
		case event := <-eventChan:
			err := e.Push(ctx, event)
			if err != nil {
				log.WithField("error", err).Error("error pushing to fossilizer events exporter")
			}
		case <-ctx.Done():
			return
		}
	}
}
