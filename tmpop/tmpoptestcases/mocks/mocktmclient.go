// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stratumn/go-indigocore/tmpop (interfaces: TendermintClient)

package tmpoptestcasesmocks

import (
	gomock "github.com/golang/mock/gomock"
	tmpop "github.com/stratumn/go-indigocore/tmpop"
	reflect "reflect"
)

// MockTendermintClient is a mock of TendermintClient interface
type MockTendermintClient struct {
	ctrl     *gomock.Controller
	recorder *MockTendermintClientMockRecorder
}

// MockTendermintClientMockRecorder is the mock recorder for MockTendermintClient
type MockTendermintClientMockRecorder struct {
	mock *MockTendermintClient
}

// NewMockTendermintClient creates a new mock instance
func NewMockTendermintClient(ctrl *gomock.Controller) *MockTendermintClient {
	mock := &MockTendermintClient{ctrl: ctrl}
	mock.recorder = &MockTendermintClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockTendermintClient) EXPECT() *MockTendermintClientMockRecorder {
	return _m.recorder
}

// Block mocks base method
func (_m *MockTendermintClient) Block(_param0 int64) (*tmpop.Block, error) {
	ret := _m.ctrl.Call(_m, "Block", _param0)
	ret0, _ := ret[0].(*tmpop.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Block indicates an expected call of Block
func (_mr *MockTendermintClientMockRecorder) Block(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Block", reflect.TypeOf((*MockTendermintClient)(nil).Block), arg0)
}
